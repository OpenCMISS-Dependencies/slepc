        subroutine PEPLinearSetCompanionForm(pep, cform ,ierr)
       PEP pep ! PEP
       PetscInt cform ! PetscInt
       integer ierr
       end subroutine
        subroutine PEPLinearGetCompanionForm(pep, cform ,ierr)
       PEP pep ! PEP
       PetscInt cform ! PetscInt
       integer ierr
       end subroutine
        subroutine PEPLinearSetExplicitMatrix(pep, explicitmatrix ,ierr)
       PEP pep ! PEP
       PetscBool explicitmatrix ! PetscBool
       integer ierr
       end subroutine
        subroutine PEPLinearGetExplicitMatrix(pep, explicitmatrix ,ierr)
       PEP pep ! PEP
       PetscBool explicitmatrix ! PetscBool
       integer ierr
       end subroutine
        subroutine PEPLinearSetEPS(pep, eps ,ierr)
       PEP pep ! PEP
       EPS eps ! EPS
       integer ierr
       end subroutine
        subroutine PEPLinearGetEPS(pep, eps ,ierr)
       PEP pep ! PEP
       EPS eps ! EPS
       integer ierr
       end subroutine
        subroutine PEPPrintSolution(pep, viewer ,ierr)
       PEP pep ! PEP
       PetscViewer viewer ! PetscViewer
       integer ierr
       end subroutine
        subroutine PEPReset(pep ,ierr)
       PEP pep ! PEP
       integer ierr
       end subroutine
        subroutine PEPSetBV(pep, bv ,ierr)
       PEP pep ! PEP
       BV bv ! BV
       integer ierr
       end subroutine
        subroutine PEPSetRG(pep, rg ,ierr)
       PEP pep ! PEP
       RG rg ! RG
       integer ierr
       end subroutine
        subroutine PEPSetDS(pep, ds ,ierr)
       PEP pep ! PEP
       DS ds ! DS
       integer ierr
       end subroutine
        subroutine PEPSetST(pep, st ,ierr)
       PEP pep ! PEP
       ST st ! ST
       integer ierr
       end subroutine
        subroutine PEPSetTarget(pep, target ,ierr)
       PEP pep ! PEP
       PetscScalar target ! PetscScalar
       integer ierr
       end subroutine
        subroutine PEPGetTarget(pep, target ,ierr)
       PEP pep ! PEP
       PetscScalar target ! PetscScalar
       integer ierr
       end subroutine
        subroutine PEPSetUp(pep ,ierr)
       PEP pep ! PEP
       integer ierr
       end subroutine
        subroutine PEPSetOperators(pep, nmat, A ,ierr)
       PEP pep ! PEP
       PetscInt nmat ! PetscInt
       Mat A (*) ! Mat
       integer ierr
       end subroutine
        subroutine PEPGetOperators(pep, k, A ,ierr)
       PEP pep ! PEP
       PetscInt k ! PetscInt
       Mat A ! Mat
       integer ierr
       end subroutine
        subroutine PEPGetNumMatrices(pep, nmat ,ierr)
       PEP pep ! PEP
       PetscInt nmat ! PetscInt
       integer ierr
       end subroutine
        subroutine PEPSetInitialSpace(pep, n, is ,ierr)
       PEP pep ! PEP
       PetscInt n ! PetscInt
       Vec is ! Vec
       integer ierr
       end subroutine
        subroutine PEPAllocateSolution(pep, extra ,ierr)
       PEP pep ! PEP
       PetscInt extra ! PetscInt
       integer ierr
       end subroutine
        subroutine PEPSolve(pep ,ierr)
       PEP pep ! PEP
       integer ierr
       end subroutine
        subroutine PEPGetIterationNumber(pep, its ,ierr)
       PEP pep ! PEP
       PetscInt its ! PetscInt
       integer ierr
       end subroutine
        subroutine PEPGetConverged(pep, nconv ,ierr)
       PEP pep ! PEP
       PetscInt nconv ! PetscInt
       integer ierr
       end subroutine
        subroutine PEPGetEigenpair(pep, i, eigr, eigi, Vr, Vi ,ierr)
       PEP pep ! PEP
       PetscInt i ! PetscInt
       PetscScalar eigr ! PetscScalar
       PetscScalar eigi ! PetscScalar
       Vec Vr ! Vec
       Vec Vi ! Vec
       integer ierr
       end subroutine
        subroutine PEPGetErrorEstimate(pep, i, errest ,ierr)
       PEP pep ! PEP
       PetscInt i ! PetscInt
       PetscReal errest ! PetscReal
       integer ierr
       end subroutine
        subroutine PEPComputeResidualNorm(pep, i, norm ,ierr)
       PEP pep ! PEP
       PetscInt i ! PetscInt
       PetscReal norm ! PetscReal
       integer ierr
       end subroutine
        subroutine PEPComputeRelativeError(pep, i, error ,ierr)
       PEP pep ! PEP
       PetscInt i ! PetscInt
       PetscReal error ! PetscReal
       integer ierr
       end subroutine
        subroutine PEPSetWorkVecs(pep, nw ,ierr)
       PEP pep ! PEP
       PetscInt nw ! PetscInt
       integer ierr
       end subroutine
        subroutine PEPMonitorCancel(pep ,ierr)
       PEP pep ! PEP
       integer ierr
       end subroutine
        subroutine PEPSetFromOptions(pep ,ierr)
       PEP pep ! PEP
       integer ierr
       end subroutine
        subroutine PEPGetTolerances(pep, tol, maxits ,ierr)
       PEP pep ! PEP
       PetscReal tol ! PetscReal
       PetscInt maxits ! PetscInt
       integer ierr
       end subroutine
        subroutine PEPSetTolerances(pep, tol, maxits ,ierr)
       PEP pep ! PEP
       PetscReal tol ! PetscReal
       PetscInt maxits ! PetscInt
       integer ierr
       end subroutine
        subroutine PEPGetDimensions(pep, nev, ncv, mpd ,ierr)
       PEP pep ! PEP
       PetscInt nev ! PetscInt
       PetscInt ncv ! PetscInt
       PetscInt mpd ! PetscInt
       integer ierr
       end subroutine
        subroutine PEPSetDimensions(pep, nev, ncv, mpd ,ierr)
       PEP pep ! PEP
       PetscInt nev ! PetscInt
       PetscInt ncv ! PetscInt
       PetscInt mpd ! PetscInt
       integer ierr
       end subroutine
        subroutine PEPSetWhichEigenpairs(pep, which ,ierr)
       PEP pep ! PEP
       PEPWhich which ! PEPWhich
       integer ierr
       end subroutine
        subroutine PEPSetProblemType(pep, type ,ierr)
       PEP pep ! PEP
       PEPProblemType type ! PEPProblemType
       integer ierr
       end subroutine
        subroutine PEPSetBasis(pep, basis ,ierr)
       PEP pep ! PEP
       PEPBasis basis ! PEPBasis
       integer ierr
       end subroutine
        subroutine PEPSetTrackAll(pep, trackall ,ierr)
       PEP pep ! PEP
       PetscBool trackall ! PetscBool
       integer ierr
       end subroutine
        subroutine PEPGetTrackAll(pep, trackall ,ierr)
       PEP pep ! PEP
       PetscBool trackall ! PetscBool
       integer ierr
       end subroutine
        subroutine PEPSetConvergenceTest(pep, conv ,ierr)
       PEP pep ! PEP
       PEPConv conv ! PEPConv
       integer ierr
       end subroutine
        subroutine PEPGetConvergenceTest(pep, conv ,ierr)
       PEP pep ! PEP
       PEPConv conv ! PEPConv
       integer ierr
       end subroutine
        subroutine PEPSetScale(pep, scale, alpha, its, lambda ,ierr)
       PEP pep ! PEP
       PEPScale scale ! PEPScale
       PetscReal alpha ! PetscReal
       PetscInt its ! PetscInt
       PetscReal lambda ! PetscReal
       integer ierr
       end subroutine
        subroutine PEPGetScale(pep, scale, alpha, its, lambda ,ierr)
       PEP pep ! PEP
       PEPScale scale ! PEPScale
       PetscReal alpha ! PetscReal
       PetscInt its ! PetscInt
       PetscReal lambda ! PetscReal
       integer ierr
       end subroutine
        subroutine PEPSetExtract(pep, extract ,ierr)
       PEP pep ! PEP
       PEPExtract extract ! PEPExtract
       integer ierr
       end subroutine
        subroutine PEPGetExtract(pep, extract ,ierr)
       PEP pep ! PEP
       PEPExtract extract ! PEPExtract
       integer ierr
       end subroutine
        subroutine PEPSetRefine(pep, refine, npart, tol, its, schur ,   &
     &ierr)
       PEP pep ! PEP
       PEPRefine refine ! PEPRefine
       PetscInt npart ! PetscInt
       PetscReal tol ! PetscReal
       PetscInt its ! PetscInt
       PetscBool schur ! PetscBool
       integer ierr
       end subroutine
        subroutine PEPGetRefine(pep, refine, npart, tol, its, schur ,   &
     &ierr)
       PEP pep ! PEP
       PEPRefine refine ! PEPRefine
       PetscInt npart ! PetscInt
       PetscReal tol ! PetscReal
       PetscInt its ! PetscInt
       PetscBool schur ! PetscBool
       integer ierr
       end subroutine
        subroutine PEPQArnoldiSetRestart(pep, keep ,ierr)
       PEP pep ! PEP
       PetscReal keep ! PetscReal
       integer ierr
       end subroutine
        subroutine PEPQArnoldiGetRestart(pep, keep ,ierr)
       PEP pep ! PEP
       PetscReal keep ! PetscReal
       integer ierr
       end subroutine
        subroutine PEPTOARSetRestart(pep, keep ,ierr)
       PEP pep ! PEP
       PetscReal keep ! PetscReal
       integer ierr
       end subroutine
        subroutine PEPTOARGetRestart(pep, keep ,ierr)
       PEP pep ! PEP
       PetscReal keep ! PetscReal
       integer ierr
       end subroutine
